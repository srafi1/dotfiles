## Main
# main()
snippet main
	int main() {
		${0}
		return 0;
	}
# main
snippet mainn
	int main(int argc, const char *argv[]) {
		${0}
		return 0;
	}
##
## Preprocessor
# #include <...>
snippet inc
	#include <${1:iostream}>
# #include "..."
snippet incc
	#include "${1:catch.hpp}"
# ifndef...define...endif
snippet ndef
	#ifndef $1
	#define ${1:SYMBOL} ${2:value}
	#endif /* ifndef $1 */
# define
snippet def
	#define
# ifdef...endif
snippet ifdef
	#ifdef ${1:FOO}
		${2:#define }
	#endif
# if
snippet #if
	#if ${1:FOO}
		${0:${VISUAL}}
	#endif
# header include guard

##
## Control Statements
# if
snippet if
	if (${1}) {
		${0}
	}
snippet ife
	if (${1}) {
		${2}
	} else {
		${0}
	}
# else
snippet el
	else {
		${0:${VISUAL}}
	}
# else if
snippet elif
	else if (${1:true}) {
		${0:${VISUAL}}
	}
# ifi
snippet ifi
	if (${1:true}) ${0};
# ternary
snippet t
	${1:/* condition */} ? ${2:a} : ${3:b}
# switch
snippet switch
	switch (${1:/* variable */}) {
		case ${2:/* variable case */}:
			${3}
			${4:break;}${5}
		default:
			${6}
	}
# switch without default
snippet switchndef
	switch (${1:/* variable */}) {
		case ${2:/* variable case */}:
			${3}
			${4:break;}${5}
	}
# case
snippet case
	case ${1:/* variable case */}:
		${2}
		${3:break;}
snippet ret
	return ${0:ret};
##
## Loops
# for
snippet for
	for (int ${1:i} = 0; $1 < ${2:count}; $1${3:++}) {
		${0}
	}
# while
snippet while
	while (${1:/* condition */}) {
		${0:${VISUAL}}
	}
# do... while
snippet do
	do {
		${0:${VISUAL}}
	} while (${1:/* condition */});

##
## Functions
# function definition
snippet fn
	${1:void} ${2:functionName}(${3}) {
		${0}
	}
# function definition with zero parameters
snippet fn0
	${1:void} ${2:functionName}() {
		${0}
	}

##
## Custom
# I/O
snippet cout
	std::cout << ${1} << std::endl;
snippet out
	std::cout << ${1};
snippet cin
	std::cin >> ${1};
